
* TODO lists in lists should auto-flatten
** TODO limited # of types: lists, fns w/definite args, parens
*** not actually that hard to have ui affordances for this: lists you just type, fns you can accept an "enter" event, parens...parens
* TODO parens, lists, sums---hmmm
** gonna have multiple paradigms here---navigate by text, by s-expression, etc---it's ok to have multiple, but user should know which and it should be internally consistent
** any compound/grouping (parens, sums, lists, etc) should have similar ui in extending
** what to do with with "functions" like frac that are lists-of-lists?
** list-as-made-by-infix is dumb
*** obj hierarchy
*** statement: #{equation, inequality, \exists, etc} tree---but let's avoid!
*** equation: [expression [= expression]*]    <-- list!   
*** expression: [term [infix term]*]          <-- list!
*** term: [call | identifer]+                 <--list!
*** identifier: [0-9a-z]                  
*** call [operator expression+]               tree
*** 
* TODO extend-paren left/right
* TODO select by search
* TODO edit-by-authoring
** make it work with range selection
* TODO insert
* TODO doto
** make it work on range selections
** TODO make parens work w/range selection
* TODO copy, cut, paste
* DONE Delete-node

* DONE "crazy toolbox" is what we want

* DONE live rendering of current, and live-rendering of doc, and



* DONE maintain history of expressions/equations

* TODO thumbnails of history

* TODO save hw @ every point

* must have predictable, regular primitives of selection/construction

* "product" etc, should probably just be...a list?

* "list" should be a primitive you have, something like "+ 5" is a lame *mathematical expression*, but a perfectly valid *writing primitive*

* you *do* want some intelligence to prevent things like "5 +", though---removing 6 from "5+6" should automatically turn to "5"


* TODO one part a doc editor, goes straight to latex
** window showing the (unrendered) latex you've written
** window showing the (rendered) latex you've written
** latex window fully editable

* TODO I mean, the ideal would be some weird combo of paredit and a viz tool

* core operations that you'd want to do:
** replace-exp
** doto-exp

** do-to both sides
** certain simplifications
** "do opposite" of exp---given x+8=15, you'd want to operate on +8 and get x=7


** distribute
** combine terms
** break a term up (is this necessary, given replace?)
** undo
** write eq
